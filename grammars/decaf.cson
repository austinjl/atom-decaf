'scopeName': 'source.decaf'
'name': 'Decaf'
'fileTypes': ['decaf']

'patterns': [
  # keywords
  {
   'match': '\\bdef\\b'
   'name': 'keyword.control.decaf'
  },
  {
    'match': '\\bint\\b'
    'name': 'entity.name.type.decaf'
  },
  {
    'match': '\\bbool\\b'
    'name': 'entity.name.type.decaf'
  },
  {
    'match': '\\bvoid\\b'
    'name': 'entity.name.type.decaf'
  },
  {
    'match': '\\bif\\b'
    'name': 'keyword.control.decaf'
  },
  {
    'match': '\\belse\\b'
    'name': 'keyword.control.decaf'
  },
  {
    'match': '\\breturn\\b'
    'name': 'keyword.control.decaf'
  },
  {
    'match': '\\bwhile\\b'
    'name': 'keyword.control.decaf'
  },
  {
    'match': '\\bcontinue\\b'
    'name': 'keyword.control.decaf'
  },
  {
    'match': '\\bbreak\\b'
    'name': 'keyword.control.decaf'
  },
  {
    'match': '\\btrue\\b'
    'name': 'constant.language.decaf'
  },
  {
    'match': '\\bfalse\\b'
    'name': 'keyword.language.decaf'
  },
  {
    'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
    'name': 'constant.numeric.decaf'
  },
  # comments
  {
    'name': "comment.line.double-slash.decaf"
    'begin': "//"
    'end': "$|(?=</script)"
    'captures':
      '1':
        'name': "punctuation.definition.comment.decaf"
  },
  # strings
  {
    'begin': '\"'
    'end': '\"'
    'name': 'string.quoted.single.mylanguage'
  }
]
